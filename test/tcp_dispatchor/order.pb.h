// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: order.proto
// Protobuf C++ Version: 4.26.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_order_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_order_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 4026000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/service.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_order_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_order_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_order_2eproto;
class make_order_request;
struct make_order_requestDefaultTypeInternal;
extern make_order_requestDefaultTypeInternal _make_order_request_default_instance_;
class make_order_response;
struct make_order_responseDefaultTypeInternal;
extern make_order_responseDefaultTypeInternal _make_order_response_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class make_order_response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:make_order_response) */ {
 public:
  inline make_order_response() : make_order_response(nullptr) {}
  ~make_order_response() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR make_order_response(
      ::google::protobuf::internal::ConstantInitialized);

  inline make_order_response(const make_order_response& from) : make_order_response(nullptr, from) {}
  inline make_order_response(make_order_response&& from) noexcept
      : make_order_response(nullptr, std::move(from)) {}
  inline make_order_response& operator=(const make_order_response& from) {
    CopyFrom(from);
    return *this;
  }
  inline make_order_response& operator=(make_order_response&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const make_order_response& default_instance() {
    return *internal_default_instance();
  }
  static inline const make_order_response* internal_default_instance() {
    return reinterpret_cast<const make_order_response*>(
        &_make_order_response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(make_order_response& a, make_order_response& b) { a.Swap(&b); }
  inline void Swap(make_order_response* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(make_order_response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  make_order_response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<make_order_response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const make_order_response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const make_order_response& from) { make_order_response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(make_order_response* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "make_order_response"; }

 protected:
  explicit make_order_response(::google::protobuf::Arena* arena);
  make_order_response(::google::protobuf::Arena* arena, const make_order_response& from);
  make_order_response(::google::protobuf::Arena* arena, make_order_response&& from) noexcept
      : make_order_response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResInfoFieldNumber = 2,
    kOrderIdFieldNumber = 3,
    kRetCodeFieldNumber = 1,
  };
  // string res_info = 2;
  void clear_res_info() ;
  const std::string& res_info() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_res_info(Arg_&& arg, Args_... args);
  std::string* mutable_res_info();
  PROTOBUF_NODISCARD std::string* release_res_info();
  void set_allocated_res_info(std::string* value);

  private:
  const std::string& _internal_res_info() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_res_info(
      const std::string& value);
  std::string* _internal_mutable_res_info();

  public:
  // string order_id = 3;
  void clear_order_id() ;
  const std::string& order_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order_id(Arg_&& arg, Args_... args);
  std::string* mutable_order_id();
  PROTOBUF_NODISCARD std::string* release_order_id();
  void set_allocated_order_id(std::string* value);

  private:
  const std::string& _internal_order_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_order_id(
      const std::string& value);
  std::string* _internal_mutable_order_id();

  public:
  // int32 ret_code = 1;
  void clear_ret_code() ;
  ::int32_t ret_code() const;
  void set_ret_code(::int32_t value);

  private:
  ::int32_t _internal_ret_code() const;
  void _internal_set_ret_code(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:make_order_response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      44, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr res_info_;
    ::google::protobuf::internal::ArenaStringPtr order_id_;
    ::int32_t ret_code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2eproto;
};
// -------------------------------------------------------------------

class make_order_request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:make_order_request) */ {
 public:
  inline make_order_request() : make_order_request(nullptr) {}
  ~make_order_request() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR make_order_request(
      ::google::protobuf::internal::ConstantInitialized);

  inline make_order_request(const make_order_request& from) : make_order_request(nullptr, from) {}
  inline make_order_request(make_order_request&& from) noexcept
      : make_order_request(nullptr, std::move(from)) {}
  inline make_order_request& operator=(const make_order_request& from) {
    CopyFrom(from);
    return *this;
  }
  inline make_order_request& operator=(make_order_request&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const make_order_request& default_instance() {
    return *internal_default_instance();
  }
  static inline const make_order_request* internal_default_instance() {
    return reinterpret_cast<const make_order_request*>(
        &_make_order_request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(make_order_request& a, make_order_request& b) { a.Swap(&b); }
  inline void Swap(make_order_request* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(make_order_request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  make_order_request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<make_order_request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const make_order_request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const make_order_request& from) { make_order_request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(make_order_request* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "make_order_request"; }

 protected:
  explicit make_order_request(::google::protobuf::Arena* arena);
  make_order_request(::google::protobuf::Arena* arena, const make_order_request& from);
  make_order_request(::google::protobuf::Arena* arena, make_order_request&& from) noexcept
      : make_order_request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGoodsFieldNumber = 2,
    kPriceFieldNumber = 1,
  };
  // string goods = 2;
  void clear_goods() ;
  const std::string& goods() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_goods(Arg_&& arg, Args_... args);
  std::string* mutable_goods();
  PROTOBUF_NODISCARD std::string* release_goods();
  void set_allocated_goods(std::string* value);

  private:
  const std::string& _internal_goods() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_goods(
      const std::string& value);
  std::string* _internal_mutable_goods();

  public:
  // int32 price = 1;
  void clear_price() ;
  ::int32_t price() const;
  void set_price(::int32_t value);

  private:
  ::int32_t _internal_price() const;
  void _internal_set_price(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:make_order_request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      32, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr goods_;
    ::int32_t price_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_order_2eproto;
};

// ===================================================================


// -------------------------------------------------------------------

class Order_Stub;
class Order : public ::google::protobuf::Service {
 protected:
  Order() = default;

 public:
  using Stub = Order_Stub;

  Order(const Order&) = delete;
  Order& operator=(const Order&) = delete;
  virtual ~Order() = default;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void make_order(::google::protobuf::RpcController* controller,
                        const ::make_order_request* request,
                        ::make_order_response* response,
                        ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------
  const ::google::protobuf::ServiceDescriptor* GetDescriptor() override;

  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done) override;

  const ::google::protobuf::Message& GetRequestPrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;

  const ::google::protobuf::Message& GetResponsePrototype(
      const ::google::protobuf::MethodDescriptor* method) const override;
};

class Order_Stub final : public Order {
 public:
  Order_Stub(::google::protobuf::RpcChannel* channel);
  Order_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);

  Order_Stub(const Order_Stub&) = delete;
  Order_Stub& operator=(const Order_Stub&) = delete;

  ~Order_Stub() override;

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Order ------------------------------------------
  void make_order(::google::protobuf::RpcController* controller,
                        const ::make_order_request* request,
                        ::make_order_response* response,
                        ::google::protobuf::Closure* done) override;

 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
};
// ===================================================================



// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// make_order_request

// int32 price = 1;
inline void make_order_request::clear_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.price_ = 0;
}
inline ::int32_t make_order_request::price() const {
  // @@protoc_insertion_point(field_get:make_order_request.price)
  return _internal_price();
}
inline void make_order_request::set_price(::int32_t value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:make_order_request.price)
}
inline ::int32_t make_order_request::_internal_price() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.price_;
}
inline void make_order_request::_internal_set_price(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.price_ = value;
}

// string goods = 2;
inline void make_order_request::clear_goods() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.goods_.ClearToEmpty();
}
inline const std::string& make_order_request::goods() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:make_order_request.goods)
  return _internal_goods();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void make_order_request::set_goods(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.goods_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:make_order_request.goods)
}
inline std::string* make_order_request::mutable_goods() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_goods();
  // @@protoc_insertion_point(field_mutable:make_order_request.goods)
  return _s;
}
inline const std::string& make_order_request::_internal_goods() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.goods_.Get();
}
inline void make_order_request::_internal_set_goods(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.goods_.Set(value, GetArena());
}
inline std::string* make_order_request::_internal_mutable_goods() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.goods_.Mutable( GetArena());
}
inline std::string* make_order_request::release_goods() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:make_order_request.goods)
  return _impl_.goods_.Release();
}
inline void make_order_request::set_allocated_goods(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.goods_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.goods_.IsDefault()) {
          _impl_.goods_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:make_order_request.goods)
}

// -------------------------------------------------------------------

// make_order_response

// int32 ret_code = 1;
inline void make_order_response::clear_ret_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ret_code_ = 0;
}
inline ::int32_t make_order_response::ret_code() const {
  // @@protoc_insertion_point(field_get:make_order_response.ret_code)
  return _internal_ret_code();
}
inline void make_order_response::set_ret_code(::int32_t value) {
  _internal_set_ret_code(value);
  // @@protoc_insertion_point(field_set:make_order_response.ret_code)
}
inline ::int32_t make_order_response::_internal_ret_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ret_code_;
}
inline void make_order_response::_internal_set_ret_code(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ret_code_ = value;
}

// string res_info = 2;
inline void make_order_response::clear_res_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.res_info_.ClearToEmpty();
}
inline const std::string& make_order_response::res_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:make_order_response.res_info)
  return _internal_res_info();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void make_order_response::set_res_info(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.res_info_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:make_order_response.res_info)
}
inline std::string* make_order_response::mutable_res_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_res_info();
  // @@protoc_insertion_point(field_mutable:make_order_response.res_info)
  return _s;
}
inline const std::string& make_order_response::_internal_res_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.res_info_.Get();
}
inline void make_order_response::_internal_set_res_info(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.res_info_.Set(value, GetArena());
}
inline std::string* make_order_response::_internal_mutable_res_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.res_info_.Mutable( GetArena());
}
inline std::string* make_order_response::release_res_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:make_order_response.res_info)
  return _impl_.res_info_.Release();
}
inline void make_order_response::set_allocated_res_info(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.res_info_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.res_info_.IsDefault()) {
          _impl_.res_info_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:make_order_response.res_info)
}

// string order_id = 3;
inline void make_order_response::clear_order_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.order_id_.ClearToEmpty();
}
inline const std::string& make_order_response::order_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:make_order_response.order_id)
  return _internal_order_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void make_order_response::set_order_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.order_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:make_order_response.order_id)
}
inline std::string* make_order_response::mutable_order_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_order_id();
  // @@protoc_insertion_point(field_mutable:make_order_response.order_id)
  return _s;
}
inline const std::string& make_order_response::_internal_order_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.order_id_.Get();
}
inline void make_order_response::_internal_set_order_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.order_id_.Set(value, GetArena());
}
inline std::string* make_order_response::_internal_mutable_order_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.order_id_.Mutable( GetArena());
}
inline std::string* make_order_response::release_order_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:make_order_response.order_id)
  return _impl_.order_id_.Release();
}
inline void make_order_response::set_allocated_order_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.order_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.order_id_.IsDefault()) {
          _impl_.order_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:make_order_response.order_id)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_order_2eproto_2epb_2eh
