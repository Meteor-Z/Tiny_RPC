// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: order.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_order_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_order_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_order_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_order_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_order_2eproto;
class make_order_request;
class make_order_requestDefaultTypeInternal;
extern make_order_requestDefaultTypeInternal _make_order_request_default_instance_;
class make_order_response;
class make_order_responseDefaultTypeInternal;
extern make_order_responseDefaultTypeInternal _make_order_response_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::make_order_request* Arena::CreateMaybeMessage<::make_order_request>(Arena*);
template<> ::make_order_response* Arena::CreateMaybeMessage<::make_order_response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class make_order_request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:make_order_request) */ {
 public:
  inline make_order_request() : make_order_request(nullptr) {};
  virtual ~make_order_request();

  make_order_request(const make_order_request& from);
  make_order_request(make_order_request&& from) noexcept
    : make_order_request() {
    *this = ::std::move(from);
  }

  inline make_order_request& operator=(const make_order_request& from) {
    CopyFrom(from);
    return *this;
  }
  inline make_order_request& operator=(make_order_request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const make_order_request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const make_order_request* internal_default_instance() {
    return reinterpret_cast<const make_order_request*>(
               &_make_order_request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(make_order_request& a, make_order_request& b) {
    a.Swap(&b);
  }
  inline void Swap(make_order_request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(make_order_request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline make_order_request* New() const final {
    return CreateMaybeMessage<make_order_request>(nullptr);
  }

  make_order_request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<make_order_request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const make_order_request& from);
  void MergeFrom(const make_order_request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(make_order_request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "make_order_request";
  }
  protected:
  explicit make_order_request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_order_2eproto);
    return ::descriptor_table_order_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGoodsFieldNumber = 2,
    kPriceFieldNumber = 1,
  };
  // string goods = 2;
  void clear_goods();
  const std::string& goods() const;
  void set_goods(const std::string& value);
  void set_goods(std::string&& value);
  void set_goods(const char* value);
  void set_goods(const char* value, size_t size);
  std::string* mutable_goods();
  std::string* release_goods();
  void set_allocated_goods(std::string* goods);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_goods();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_goods(
      std::string* goods);
  private:
  const std::string& _internal_goods() const;
  void _internal_set_goods(const std::string& value);
  std::string* _internal_mutable_goods();
  public:

  // int32 price = 1;
  void clear_price();
  ::PROTOBUF_NAMESPACE_ID::int32 price() const;
  void set_price(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_price() const;
  void _internal_set_price(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:make_order_request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr goods_;
  ::PROTOBUF_NAMESPACE_ID::int32 price_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_order_2eproto;
};
// -------------------------------------------------------------------

class make_order_response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:make_order_response) */ {
 public:
  inline make_order_response() : make_order_response(nullptr) {};
  virtual ~make_order_response();

  make_order_response(const make_order_response& from);
  make_order_response(make_order_response&& from) noexcept
    : make_order_response() {
    *this = ::std::move(from);
  }

  inline make_order_response& operator=(const make_order_response& from) {
    CopyFrom(from);
    return *this;
  }
  inline make_order_response& operator=(make_order_response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const make_order_response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const make_order_response* internal_default_instance() {
    return reinterpret_cast<const make_order_response*>(
               &_make_order_response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(make_order_response& a, make_order_response& b) {
    a.Swap(&b);
  }
  inline void Swap(make_order_response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(make_order_response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline make_order_response* New() const final {
    return CreateMaybeMessage<make_order_response>(nullptr);
  }

  make_order_response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<make_order_response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const make_order_response& from);
  void MergeFrom(const make_order_response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(make_order_response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "make_order_response";
  }
  protected:
  explicit make_order_response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_order_2eproto);
    return ::descriptor_table_order_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResInfoFieldNumber = 2,
    kOrderIdFieldNumber = 3,
    kRetCodeFieldNumber = 1,
  };
  // string res_info = 2;
  void clear_res_info();
  const std::string& res_info() const;
  void set_res_info(const std::string& value);
  void set_res_info(std::string&& value);
  void set_res_info(const char* value);
  void set_res_info(const char* value, size_t size);
  std::string* mutable_res_info();
  std::string* release_res_info();
  void set_allocated_res_info(std::string* res_info);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_res_info();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_res_info(
      std::string* res_info);
  private:
  const std::string& _internal_res_info() const;
  void _internal_set_res_info(const std::string& value);
  std::string* _internal_mutable_res_info();
  public:

  // string order_id = 3;
  void clear_order_id();
  const std::string& order_id() const;
  void set_order_id(const std::string& value);
  void set_order_id(std::string&& value);
  void set_order_id(const char* value);
  void set_order_id(const char* value, size_t size);
  std::string* mutable_order_id();
  std::string* release_order_id();
  void set_allocated_order_id(std::string* order_id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_order_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_order_id(
      std::string* order_id);
  private:
  const std::string& _internal_order_id() const;
  void _internal_set_order_id(const std::string& value);
  std::string* _internal_mutable_order_id();
  public:

  // int32 ret_code = 1;
  void clear_ret_code();
  ::PROTOBUF_NAMESPACE_ID::int32 ret_code() const;
  void set_ret_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ret_code() const;
  void _internal_set_ret_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:make_order_response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr res_info_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr order_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 ret_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_order_2eproto;
};
// ===================================================================

class Order_Stub;

class Order : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Order() {};
 public:
  virtual ~Order();

  typedef Order_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void make_order(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::make_order_request* request,
                       ::make_order_response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Order);
};

class Order_Stub : public Order {
 public:
  Order_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  Order_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~Order_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements Order ------------------------------------------

  void make_order(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::make_order_request* request,
                       ::make_order_response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Order_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// make_order_request

// int32 price = 1;
inline void make_order_request::clear_price() {
  price_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 make_order_request::_internal_price() const {
  return price_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 make_order_request::price() const {
  // @@protoc_insertion_point(field_get:make_order_request.price)
  return _internal_price();
}
inline void make_order_request::_internal_set_price(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  price_ = value;
}
inline void make_order_request::set_price(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:make_order_request.price)
}

// string goods = 2;
inline void make_order_request::clear_goods() {
  goods_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& make_order_request::goods() const {
  // @@protoc_insertion_point(field_get:make_order_request.goods)
  return _internal_goods();
}
inline void make_order_request::set_goods(const std::string& value) {
  _internal_set_goods(value);
  // @@protoc_insertion_point(field_set:make_order_request.goods)
}
inline std::string* make_order_request::mutable_goods() {
  // @@protoc_insertion_point(field_mutable:make_order_request.goods)
  return _internal_mutable_goods();
}
inline const std::string& make_order_request::_internal_goods() const {
  return goods_.Get();
}
inline void make_order_request::_internal_set_goods(const std::string& value) {
  
  goods_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void make_order_request::set_goods(std::string&& value) {
  
  goods_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:make_order_request.goods)
}
inline void make_order_request::set_goods(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  goods_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:make_order_request.goods)
}
inline void make_order_request::set_goods(const char* value,
    size_t size) {
  
  goods_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:make_order_request.goods)
}
inline std::string* make_order_request::_internal_mutable_goods() {
  
  return goods_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* make_order_request::release_goods() {
  // @@protoc_insertion_point(field_release:make_order_request.goods)
  return goods_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void make_order_request::set_allocated_goods(std::string* goods) {
  if (goods != nullptr) {
    
  } else {
    
  }
  goods_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), goods,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:make_order_request.goods)
}
inline std::string* make_order_request::unsafe_arena_release_goods() {
  // @@protoc_insertion_point(field_unsafe_arena_release:make_order_request.goods)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return goods_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void make_order_request::unsafe_arena_set_allocated_goods(
    std::string* goods) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (goods != nullptr) {
    
  } else {
    
  }
  goods_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      goods, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:make_order_request.goods)
}

// -------------------------------------------------------------------

// make_order_response

// int32 ret_code = 1;
inline void make_order_response::clear_ret_code() {
  ret_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 make_order_response::_internal_ret_code() const {
  return ret_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 make_order_response::ret_code() const {
  // @@protoc_insertion_point(field_get:make_order_response.ret_code)
  return _internal_ret_code();
}
inline void make_order_response::_internal_set_ret_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ret_code_ = value;
}
inline void make_order_response::set_ret_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ret_code(value);
  // @@protoc_insertion_point(field_set:make_order_response.ret_code)
}

// string res_info = 2;
inline void make_order_response::clear_res_info() {
  res_info_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& make_order_response::res_info() const {
  // @@protoc_insertion_point(field_get:make_order_response.res_info)
  return _internal_res_info();
}
inline void make_order_response::set_res_info(const std::string& value) {
  _internal_set_res_info(value);
  // @@protoc_insertion_point(field_set:make_order_response.res_info)
}
inline std::string* make_order_response::mutable_res_info() {
  // @@protoc_insertion_point(field_mutable:make_order_response.res_info)
  return _internal_mutable_res_info();
}
inline const std::string& make_order_response::_internal_res_info() const {
  return res_info_.Get();
}
inline void make_order_response::_internal_set_res_info(const std::string& value) {
  
  res_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void make_order_response::set_res_info(std::string&& value) {
  
  res_info_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:make_order_response.res_info)
}
inline void make_order_response::set_res_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  res_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:make_order_response.res_info)
}
inline void make_order_response::set_res_info(const char* value,
    size_t size) {
  
  res_info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:make_order_response.res_info)
}
inline std::string* make_order_response::_internal_mutable_res_info() {
  
  return res_info_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* make_order_response::release_res_info() {
  // @@protoc_insertion_point(field_release:make_order_response.res_info)
  return res_info_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void make_order_response::set_allocated_res_info(std::string* res_info) {
  if (res_info != nullptr) {
    
  } else {
    
  }
  res_info_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), res_info,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:make_order_response.res_info)
}
inline std::string* make_order_response::unsafe_arena_release_res_info() {
  // @@protoc_insertion_point(field_unsafe_arena_release:make_order_response.res_info)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return res_info_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void make_order_response::unsafe_arena_set_allocated_res_info(
    std::string* res_info) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (res_info != nullptr) {
    
  } else {
    
  }
  res_info_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      res_info, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:make_order_response.res_info)
}

// string order_id = 3;
inline void make_order_response::clear_order_id() {
  order_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& make_order_response::order_id() const {
  // @@protoc_insertion_point(field_get:make_order_response.order_id)
  return _internal_order_id();
}
inline void make_order_response::set_order_id(const std::string& value) {
  _internal_set_order_id(value);
  // @@protoc_insertion_point(field_set:make_order_response.order_id)
}
inline std::string* make_order_response::mutable_order_id() {
  // @@protoc_insertion_point(field_mutable:make_order_response.order_id)
  return _internal_mutable_order_id();
}
inline const std::string& make_order_response::_internal_order_id() const {
  return order_id_.Get();
}
inline void make_order_response::_internal_set_order_id(const std::string& value) {
  
  order_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void make_order_response::set_order_id(std::string&& value) {
  
  order_id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:make_order_response.order_id)
}
inline void make_order_response::set_order_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  order_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:make_order_response.order_id)
}
inline void make_order_response::set_order_id(const char* value,
    size_t size) {
  
  order_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:make_order_response.order_id)
}
inline std::string* make_order_response::_internal_mutable_order_id() {
  
  return order_id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* make_order_response::release_order_id() {
  // @@protoc_insertion_point(field_release:make_order_response.order_id)
  return order_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void make_order_response::set_allocated_order_id(std::string* order_id) {
  if (order_id != nullptr) {
    
  } else {
    
  }
  order_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), order_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:make_order_response.order_id)
}
inline std::string* make_order_response::unsafe_arena_release_order_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:make_order_response.order_id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return order_id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void make_order_response::unsafe_arena_set_allocated_order_id(
    std::string* order_id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (order_id != nullptr) {
    
  } else {
    
  }
  order_id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      order_id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:make_order_response.order_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_order_2eproto
